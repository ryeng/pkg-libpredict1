#!/bin/bash -e

if [ -z "$TRAVIS" ]; then
    echo "Do not run outside travis."
    exit
fi

if [ "XX$TRAVIS_BRANCH" != "XXmaster" -o "XX$CC" != "XXgcc" ]; then
    echo "Skipping documentation build for all except master with gcc."
    exit
fi

set -x

# Settings
REPO_PATH=git@github.com:la1k/libpredict.git
DOXYGEN_OUTPUT_PATH=@CMAKE_CURRENT_BINARY_DIR@/../doc/html
GH_PAGES_PATH=@CMAKE_CURRENT_BINARY_DIR@/../gh-pages
API_DOC_RELATIVE_PATH=api/@PROJECT_VERSION_MAJOR@.@PROJECT_VERSION_MINOR@
API_DOC_PATH=${GH_PAGES_PATH}/${API_DOC_RELATIVE_PATH}
COMMIT_USER="Documentation builder"
COMMIT_EMAIL="libpredict-admin@la1k.no"
CHANGESET=$(git rev-parse --verify HEAD)

# Get a clean version of the HTML documentation repo.
rm -rf ${GH_PAGES_PATH}
mkdir -p ${GH_PAGES_PATH}
git clone -b gh-pages "${REPO_PATH}" --single-branch ${GH_PAGES_PATH}

# rm all the files through git to prevent stale files.
cd ${GH_PAGES_PATH}
test -d ${API_DOC_PATH} && git rm -rf ${API_DOC_RELATIVE_PATH}
cd @CMAKE_CURRENT_BINARY_DIR@/..

# Generate the HTML documentation.
make doc
mkdir -p ${API_DOC_PATH}
cp -rp ${DOXYGEN_OUTPUT_PATH}/* ${API_DOC_PATH}

# Create and commit the documentation repo.
cd ${API_DOC_PATH}
git add .
git config user.name "${COMMIT_USER}"
git config user.email "${COMMIT_EMAIL}"
git commit -m "Automated documentation build for changeset ${CHANGESET}."
git push origin gh-pages
cd -
